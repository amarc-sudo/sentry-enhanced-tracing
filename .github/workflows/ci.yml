name: CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  code-quality:
    name: Code Quality Analysis
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php-version: ['8.1', '8.2', '8.3']
        dependencies: ['highest']
        include:
          - php-version: '8.1'
            dependencies: 'lowest'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup PHP ${{ matrix.php-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: json, mbstring, openssl
          coverage: none
          tools: composer
          
      - name: Validate composer.json and composer.lock
        run: composer validate --strict
        
      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
        
      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ matrix.php-version }}-${{ matrix.dependencies }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-${{ matrix.php-version }}-${{ matrix.dependencies }}-
            ${{ runner.os }}-composer-${{ matrix.php-version }}-
            ${{ runner.os }}-composer-
            
      - name: Install dependencies (highest)
        if: matrix.dependencies == 'highest'
        run: composer install --prefer-dist --no-progress --no-interaction --optimize-autoloader
        
      - name: Install dependencies (lowest)
        if: matrix.dependencies == 'lowest'
        run: composer update --prefer-dist --no-progress --no-interaction --prefer-lowest --optimize-autoloader
        
      - name: Create cache directories
        run: mkdir -p var/cache
        
      - name: Run PHPStan (Static Analysis)
        run: composer phpstan
        
      - name: Run PHPCS (Code Style)
        run: composer phpcs
        continue-on-error: true # PHPCS peut échouer à cause du bug phpcbf
        
      - name: Run Psalm (Type Analysis)
        run: composer psalm
        
      - name: Archive code quality results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: code-quality-results-php${{ matrix.php-version }}
          path: |
            var/cache/phpstan/
            var/cache/psalm/
            var/cache/phpcs/

  security-check:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: json, mbstring, openssl
          coverage: none
          tools: composer
          
      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-interaction
        
      - name: Security audit
        run: composer audit
        
  dependency-check:
    name: Dependency Validation
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: json, mbstring, openssl
          coverage: none
          tools: composer
          
      - name: Validate dependencies
        run: |
          composer validate --strict
          composer check-platform-reqs
          
      - name: Check for outdated dependencies
        run: composer outdated --direct --strict
        continue-on-error: true 